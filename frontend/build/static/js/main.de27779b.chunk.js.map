{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","pdfFile","setPdfFile","useState","question","setQuestion","answer","setAnswer","React","createElement","className","type","accept","onChange","e","target","files","onClick","async","alert","formData","FormData","append","res","fetch","method","body","data","json","message","error","console","name","placeholder","value","headers","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sMA+GeA,MA5Gf,WACE,MAAOC,EAASC,GAAcC,mBAAS,OAChCC,EAAUC,GAAeF,mBAAS,KAClCG,EAAQC,GAAaJ,mBAAS,IAgDrC,OACEK,IAAAC,cAAA,OAAKC,UAAU,yDACbF,IAAAC,cAAA,OAAKC,UAAU,yGACbF,IAAAC,cAAA,MAAIC,UAAU,iEAAgE,+BAI9EF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,SACEE,KAAK,OACLC,OAAO,kBACPC,SAzDgBC,IACxBZ,EAAWY,EAAEC,OAAOC,MAAM,OA2DpBR,IAAAC,cAAA,UACEQ,QAzDWC,UACnB,IAAKjB,EAEH,YADAkB,MAAM,8BAIR,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQrB,GAExB,IACE,MAAMsB,QAAYC,MAAM,+BAAgC,CACtDC,OAAQ,OACRC,KAAMN,IAGFO,QAAaJ,EAAIK,OACvBT,MAAMQ,EAAKE,SACX,MAAOC,GACPC,QAAQD,MAAM,iBAAkBA,KAwC1BpB,UAAU,+FACX,2BAIAT,GACCO,IAAAC,cAAA,KAAGC,UAAU,iDAAgD,+BACzCF,IAAAC,cAAA,QAAMC,UAAU,mBAAmBT,EAAQ+B,OAIjExB,IAAAC,cAAA,OAAKC,UAAU,mCACbF,IAAAC,cAAA,SACEE,KAAK,OACLsB,YAAY,iCACZC,MAAO9B,EACPS,SAAWC,GAAMT,EAAYS,EAAEC,OAAOmB,OACtCxB,UAAU,oGAEZF,IAAAC,cAAA,UACEQ,QAxDMC,UAChB,GAAKd,EAKL,IACE,MAAMmB,QAAYC,MAAM,4BAA6B,CACnDC,OAAQ,OACRU,QAAS,CAAE,eAAgB,oBAC3BT,KAAMU,KAAKC,UAAU,CAAEjC,eAGnBuB,QAAaJ,EAAIK,OACvBrB,EAAUoB,EAAKrB,QACf,MAAOwB,GACPC,QAAQD,MAAM,yBAA0BA,QAdxCX,MAAM,4BAuDET,UAAU,2FACX,+BAMJJ,GACCE,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,MAAIC,UAAU,0DAAyD,0BAGvEF,IAAAC,cAAA,KAAGC,UAAU,qDAAqDJ,OC3F/DgC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5C,IAAAC,cAACD,IAAM6C,WAAU,KACf7C,IAAAC,cAACT,EAAG,QAORsC,K","file":"static/js/main.de27779b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [pdfFile, setPdfFile] = useState(null);\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const handleFileChange = (e) => {\n    setPdfFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!pdfFile) {\n      alert(\"Please select a PDF first.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', pdfFile);\n\n    try {\n      const res = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n\n      const data = await res.json();\n      alert(data.message);\n    } catch (error) {\n      console.error('Upload failed:', error);\n    }\n  };\n\n  const handleAsk = async () => {\n    if (!question) {\n      alert(\"Please type a question.\");\n      return;\n    }\n\n    try {\n      const res = await fetch('http://localhost:5000/ask', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ question })\n      });\n\n      const data = await res.json();\n      setAnswer(data.answer);\n    } catch (error) {\n      console.error('Error asking question:', error);\n    }\n  };\n\n  return (\n    <div className=\"App min-h-screen flex items-center justify-center p-6\">\n      <div className=\"card-animate w-full max-w-2xl bg-white/70 backdrop-blur-md rounded-3xl shadow-xl px-8 py-10 space-y-8\">\n        <h1 className=\"text-4xl font-bold text-center text-indigo-700 tracking-tight\">\n          üìÑ AI PDF Chatbot\n        </h1>\n\n        <div className=\"space-y-4\">\n          <input\n            type=\"file\"\n            accept=\"application/pdf\"\n            onChange={handleFileChange}\n          />\n\n          <button\n            onClick={handleUpload}\n            className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 rounded-lg shadow-md\"\n          >\n            üì§ Upload PDF\n          </button>\n\n          {pdfFile && (\n            <p className=\"text-center text-sm text-gray-600 font-medium\">\n              üìÅ Selected File: <span className=\"text-indigo-800\">{pdfFile.name}</span>\n            </p>\n          )}\n\n          <div className=\"flex flex-col sm:flex-row gap-3\">\n            <input\n              type=\"text\"\n              placeholder=\"Ask something about the PDF...\"\n              value={question}\n              onChange={(e) => setQuestion(e.target.value)}\n              className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-300\"\n            />\n            <button\n              onClick={handleAsk}\n              className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-semibold shadow-md\"\n            >\n              üí¨ Ask Question\n            </button>\n          </div>\n        </div>\n\n        {answer && (\n          <div className=\"answer-box\">\n            <h3 className=\"text-xl font-semibold text-indigo-700 mb-2 text-center\">\n              üß† AI Answer\n            </h3>\n            <p className=\"text-gray-700 text-lg leading-relaxed text-center\">{answer}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}